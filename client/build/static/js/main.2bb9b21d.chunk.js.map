{"version":3,"sources":["utils/apiCalls.js","utils/mutations.js","utils/auth.js","components/FrontPage.js","components/Header.js","components/Footer.js","pages/Profile.js","components/SignUp.js","components/PoTD.js","pages/NewsBoard.js","App.js","reportWebVitals.js","index.js"],"names":["require","ADD_USER","gql","LOGIN_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","err","getItem","idToken","setItem","window","location","assign","FrontPage","props","useState","email","password","userFormState","setUserFormState","useMutation","loginUser","showAlert","setShowAlert","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","currentTarget","checkValidity","stopPropagation","variables","data","Auth","login","id","type","onChange","required","minLength","maxLength","onClick","to","Alert","dismissible","onClose","show","variant","Header","className","Footer","Profile","SignUp","userFormData","setUserFormData","addUser","handleInputChange","disabled","Potd","alt","NewsBoard","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bb9b21d.chunk.js","sourcesContent":["const fetch = require('node-fetch');\r\n\r\nconst nasaApiKey = '94jx5aj4QNfyedbpPQ5m3UkzkknBz4yKIZpynDay';\r\n\r\nconst dailyPhoto = () => {\r\n    const apiUrl = 'https://api.nasa.gov/planetary/apod?api_key='+nasaApiKey;\r\n\r\n    fetch(apiUrl)\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(data) {\r\n        console.log(data);\r\n        document.getElementById(\"photo\").src = data.url;\r\n    })\r\n}\r\n\r\n// dailyPhoto();\r\n\r\nconst marsRover = () => {\r\n    //user will need to select sol ie. 0-1000, camera type and update url for customizable search\r\n    const apiUrl = `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000camera=fhaz&api_key=${nasaApiKey}`;\r\n\r\n    fetch(apiUrl)\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(data) {\r\n        console.log(data);\r\n    })\r\n}\r\n\r\n// marsRover();\r\n\r\n\r\nconst spaceX = () => {\r\n\r\n    const apiUrl = `https://api.spacexdata.com/v4/launches/latest`;\r\n\r\n    fetch(apiUrl)\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(data) {\r\n        console.log(data);\r\n    })\r\n}\r\n\r\n// spaceX();\r\n\r\n\r\nconst issSearch = () => {\r\n    //user will need to select sol ie. 0-1000, camera type and update url for customizable search\r\n    const apiUrl = `https://api.wheretheiss.at/v1/satellites/25544\r\n    `;\r\n\r\n    fetch(apiUrl)\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(data) {\r\n        console.log(data);\r\n    })\r\n}\r\n\r\n// issSearch();\r\n\r\n\r\nconst spaceNews = () => {\r\n    //user will need to select sol ie. 0-1000, camera type and update url for customizable search\r\n    const apiUrl = `https://api.spaceflightnewsapi.net/v3/articles?title_contains=space\r\n    `;\r\n\r\n    fetch(apiUrl)\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(data) {\r\n        console.log(data);\r\n    })\r\n}\r\n\r\n// spaceNews();\r\n\r\n\r\n\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($name: String!, $email: String!, $password: String!) {\r\n    addUser(name: $name, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Need to test when Front end is done\r\nexport const REMOVE_USER = gql`\r\n  mutation removeUser($name: String!) {\r\n    removeUser(name: $name) {\r\n      token\r\n      user {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_PHOTO = gql`\r\nmutation addPhoto($userId: ID!, $photo: String!) {\r\n    addPhoto(userId: $userId, photo: $photo) {\r\n        _id\r\n        name\r\n        photos\r\n      }\r\n    }\r\n    `;\r\n\r\n// Need to test when Front end is done\r\nexport const DELETE_PHOTO = gql`\r\nmutation deletePhoto($photo: String!) {\r\n    deletePhoto(photo: $photo) {\r\n        _id\r\n        name\r\n        photos\r\n      }\r\n    }\r\n    `;\r\n\r\nexport const ADD_PREF = gql`\r\nmutation addPref($userId: ID!, $pref: String!) {\r\n    addPref(userId: $userId, pref: $pref) {\r\n        _id\r\n        name\r\n        preferences\r\n      }\r\n    }\r\n    `;\r\n\r\n// Need to test when front end is done\r\nexport const DELETE_PREF = gql`\r\nmutation deletePref($pref: String!) {\r\n    deletePref(pref: $pref) {\r\n        _id\r\n        name\r\n        preferences\r\n      }\r\n    }\r\n    `;","// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        localStorage.removeItem('id_token')\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { useState } from \"react\";\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from \"../utils/mutations\";\r\nimport Auth from '../utils/auth';\r\nimport { Alert } from 'react-bootstrap'\r\nimport '../styles/frontpage.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FrontPage = (props) => {\r\n    const [userFormState, setUserFormState] = useState({ email: '', password: '' });\r\n    const [loginUser] = useMutation(LOGIN_USER);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormState({ ...userFormState, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // check if form has everything (as per react-bootstrap docs)\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await loginUser({\r\n                variables: { ...userFormState },\r\n            });\r\n\r\n            Auth.login(data.login.token);\r\n\r\n        } catch (err) {\r\n            //console.error(err);\r\n            setShowAlert(true);\r\n        }\r\n\r\n        setUserFormState({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id=\"frontContainer\">\r\n                <div id=\"frontImage\">\r\n                    <div id=\"frontSpacingContainer\">\r\n                        <div id=\"frontRowOne\">\r\n                            <div id=\"frontLogin\">\r\n                                <div id=\"frontNameContainer\">\r\n                                    <p>Please Enter Email</p>\r\n                                    <input type=\"email\" id=\"frontName\" name=\"email\" value={userFormState.email}\r\n                                        onChange={handleChange} required minLength=\"8\" maxLength=\"16\"></input>\r\n                                </div>\r\n                                <div id=\"frontPwContainer\">\r\n                                    <p>Please Enter Password</p>\r\n                                    <input type=\"password\" id=\"frontPw\" name=\"password\" value={userFormState.password}\r\n                                        onChange={handleChange} required minLength=\"8\" maxLength=\"16\"></input>\r\n                                </div>\r\n                                <div id=\"buttons\">\r\n                                    <button id=\"frontSubmit\" onClick={handleFormSubmit}>Enter</button>\r\n                                    <Link to={\"/signup\"}><button id=\"frontSignButton\">Sign Up</button></Link>\r\n                                </div>\r\n                            </div>\r\n                            <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n                                Invalid Username/Password please try again!\r\n                            </Alert>\r\n                        </div>\r\n                        <div id=\"frontRowTwo\"></div>\r\n                        <div id=\"frontRowThree\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default FrontPage;","import React from 'react';\r\nimport \"../styles/header.css\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\" navbar-light bg-header\">\r\n      <div className=\"row\">\r\n        <div className=\"navbar-brand col\">\r\n          <h1>Space News</h1>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport \"../styles/footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"bg-light text-center text-black\">\r\n      <div className=\"container p-4 pb-0\"></div>\r\n\r\n      <div className=\"text-center p-3 copyRight\">© 2021 Add Team Name</div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport \"../styles/profile.css\";\r\n\r\n\r\nfunction Profile() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <div className=\"profileBackground\">\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React, { useState } from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\nimport '../styles/signup.css'\r\n\r\nconst SignUp = (props) => {\r\n    // set initial form state\r\n    const [userFormData, setUserFormData] = useState({ name: '', email: '', password: '' });\r\n    // set state for alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    //addUser \r\n    const [addUser] = useMutation(ADD_USER);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // check if form has everything (as per react-bootstrap docs)\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            Auth.login(data.addUser.token);\r\n        } catch (err) {\r\n            //console.error(err);\r\n            setShowAlert(true);\r\n        }\r\n\r\n        setUserFormData({\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id=\"SignUp\">\r\n                <div id=\"SignUpInput\">\r\n                    <div id=\"signUpNameContainer\">\r\n                        <p>Please Enter Name</p>\r\n                        <input type=\"input\" id=\"signUpName\" name=\"name\" value={userFormData.name} onChange={handleInputChange} required minLength=\"3\" maxLength=\"32\"></input>\r\n                    </div>\r\n                    <div id=\"signUpEmailContainer\">\r\n                        <p>Please Enter Email</p>\r\n                        <input type=\"email\" id=\"signUpEmail\" name=\"email\" value={userFormData.email} onChange={handleInputChange}\r\n                            required minLength=\"8\" maxLength=\"32\"></input>\r\n                    </div>\r\n                    <div id=\"signUpPwContainer\">\r\n                        <p>Please Enter Password</p>\r\n                        <input type=\"password\" id=\"signUpPw\" name=\"password\" value={userFormData.password} onChange={handleInputChange}\r\n                            required minLength=\"8\" maxLength=\"16\"></input>\r\n                    </div>\r\n                    <div id=\"signUpButton\">\r\n                        <button disabled={!(userFormData.name && userFormData.email && userFormData.password)} onClick={handleFormSubmit}>Sign Up</button>\r\n                    </div>\r\n                </div>\r\n                <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n                    Something went wrong with your signup!\r\n                </Alert>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default SignUp;","import React from 'react';\r\nimport '../utils/apiCalls';\r\nimport \"../styles/POTD.css\";\r\n\r\nexport default function Potd () {\r\n    return (\r\n        <div>\r\n            <img className=\"daily-photo\" alt=\"POTD - Space API Call\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport \"../styles/newsboard.css\";\r\nimport Potd from '../components/PoTD';\r\n\r\nfunction NewsBoard() {\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"p2background\">\r\n        <Potd />\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsBoard;\r\n","import './styles/App.css';\r\nimport React from \"react\";\r\nimport FrontPage from \"./components/FrontPage\";\r\nimport Profile from \"./pages/Profile\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport NewsBoard from \"./pages/NewsBoard\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport Header from './components/Header';\r\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router basename=\"react-space-app\">\r\n        <div>\r\n          <Header />\r\n          <div>\r\n            <Route exact path=\"/\">\r\n              <FrontPage />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              <SignUp />\r\n            </Route>\r\n            <Route exact path=\"/newsboard\">\r\n              <NewsBoard />\r\n            </Route>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}